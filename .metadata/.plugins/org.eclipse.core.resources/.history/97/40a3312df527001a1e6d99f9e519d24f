package co.gyana;
//Textual representation how an object will look like in memory
//whatever we write in class is an actual property of object as we are describing the object
//If you want anything which should belong to class make it static!!
class Product
{
	//Attributes
	int pid;
	String name;
	int price;
	//Constructor
	
	
	Product()
	{
		System.out.println("Product object constructed");
	}
	//Methods
	//To write data in product object we have this method
	
	void setProductDetails(int pid,String name,int price)
	{
		this.pid=pid;
		this.name=name;
		this.price=price;
		System.out.println(">>>Data return in product object");
	}
	//Method (Behavior)
	//To write data in product Object we have this method
	
	void showProductDetails() 
	{
		System.out.println("-------Product ID:"+pid+"--------");
		System.out.println("Name:\t"+name);
		System.out.println("Price:\t"+price);
	}
}

public class InheritanceApp {
	//MAIN IS EXECUTED BY JVM WHEN MY PROGRAM WILL RUN!!
	public static void main(String[] args) 
	{
		//Create an Object:Product object
		Product product1=new Product();
		//Product1 is not an object its reference its a reference which holds the hashCode of the Object in hexadecimal notation
		System.out.println("Product is :"+product1);//we get 5ce65a89 as  a hashCode,So product is reference variable not an object
		
		//Writing data in object
		product1.setProductDetails(101,"iPhone X",50000);
		//Reading data from the object
		product1.showProductDetails();
		//Lets write the data directly
		Product product2=new Product();
		product2.pid=202;
		product2.name="Sasmsung";
		product2.price=50000;
		product2.showProductDetails();
		
	}

}
